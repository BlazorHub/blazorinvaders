@page "/"
@using Blazor.Extensions
@using Blazor.Extensions.Canvas.Canvas2D

@inject IJSRuntime JsRuntime;

<div class="row">
    <div class="col text-center">
        <h2>BlazorInvaders - a Space Invaders implementation</h2>
        <p>Built using Blazor</p>
    </div>
</div>
<div class="row justify-content-center h-75 game-canvas">
    <div class="col text-center" id="canvas">
        <div class="game-canvas" id="canvasContainer">
            <BECanvas @ref="_canvas"></BECanvas>
        </div>
    </div>
</div>
<img @ref="_spritesheet" hidden src="assets/blazor.png" />
@code{

    BECanvasComponent _canvas;
    ElementReference _spritesheet;

    Canvas2DContext _context;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeAsync<object>("initGame", DotNetObjectReference.Create(this));
            _context = await _canvas.CreateCanvas2DAsync();
        }
    }

    [JSInvokable]
    public async ValueTask GameLoop(float timeStamp, int width, int height)
    {
        await _context.ClearRectAsync(0, 0, width, height);

        await _context.DrawImageAsync(_spritesheet, 0, 0, width / 2, height / 2);
    }
}